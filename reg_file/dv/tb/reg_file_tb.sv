`ifndef REG_FILE_TB__SV
`define REG_FILE_TB__SV

  // Generated by tbengy. Created by Prasad Pandit.

  `timescale 1ns/1ps
  `include "uvm_macros.svh"

  module reg_file_tb;
    import reg_file_test_pkg::*;
    import uvm_pkg::*;

    logic clk;
    reg_addr_t   raddr_a;
    data_t       rdata_a;
    reg_addr_t   raddr_b;
    data_t       rdata_b;
    reg_addr_t   waddr;
    data_t       wdata;
    logic        we;

    reg_file_intf intf(.clk(clk));

    reg_file DUT (
      .clk_i(clk),
      .raddr_a_i(intf.raddr_a),
      .rdata_a_o(intf.rdata_a),
      .raddr_b_i(intf.raddr_b),
      .rdata_b_o(intf.rdata_b),
      .waddr_i(intf.waddr),
      .wdata_i(intf.wdata),
      .we_i(intf.we)
    );

    initial begin
      clk = 0;
      forever begin
        #10 clk = ~clk;
      end
    end

    initial begin
      uvm_config_db #(virtual reg_file_intf)::set(null, "*", "vintf", intf);
      run_test();
    end
  endmodule

`endif

//End of reg_file_tb
